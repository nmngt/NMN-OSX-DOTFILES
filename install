
#!/usr/bin/env bash

export NBE_PATH=$PWD

# Link .bash.d dir to user profile dir
ln -s ${NBE_PATH}/bash.d $HOME/.bash.d

# Link dotfiles to the user profile dir
if [ -d "${NBE_PATH}/dotfiles" ]; 
then
    for file in ${NBE_PATH}/dotfiles/*; 
    do
        f=$(basename $file) # current filename
        if [[ "${f:0:1}" == "_" ]]; 
        then
            nf="$HOME/.${f:1}" # new filename

            if [ -r "$file" ]; 
            then
                if [ -f "$nf" ]; 
                then
                    echo "[LINK]: !! $f !> $nf (FILE EXISTS)"
                elif [ -d "$nf" ]; 
                then
                    echo "[LINK]: !! $f !> $nf (DIR EXISTS)"
                else
                    echo "[LINK]: $f -> $nf"
                    ln -s $file $nf
                fi
            fi
        fi
    done
fi

# Add global gitignore
# ln -s $NBE_PATH/dotfiles/_gitignore $HOME/.global-gitignore
git config --global core.excludesfile $HOME/.gitignore

# echo 'Install composer'
# echo '----------------'
# php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
# php -r "if (hash_file('sha384', 'composer-setup.php') === 'a5c698ffe4b8e849a443b120cd5ba38043260d5c4023dbf93e1558871f1f07f58274fc6f4c93bcfd858c6bd0775cd8d1') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
# php composer-setup.php
# php -r "unlink('composer-setup.php');"
# mv composer.phar /usr/local/bin/composer

# echo 'Install homebrew'
# echo '----------------'
# echo install homebrew
# sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
# ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

# Make sure we’re using the latest Homebrew.
brew update

# Upgrade any already-installed formulae.
brew upgrade --all

# # Install GNU core utilities (those that come with OS X are outdated).
# # Don’t forget to add `$(brew --prefix coreutils)/libexec/gnubin` to `$PATH`.
# brew install coreutils
# sudo ln -s /usr/local/bin/gsha256sum /usr/local/bin/sha256sum

# # Install some other useful utilities like `sponge`.
# brew install moreutils
# # Install GNU `find`, `locate`, `updatedb`, and `xargs`, `g`-prefixed.
# brew install findutils
# # Install GNU `sed`, overwriting the built-in `sed`.
# brew install gnu-sed
# # Install Bash 4.
# brew install bash
# brew install bash-completion2
# # We installed the new shell, now we have to activate it
# echo "Adding the newly installed shell to the list of allowed shells"
# # Prompts for password
# sudo bash -c 'echo /usr/local/bin/bash >> /etc/shells'
# # Change to the new shell, prompts for password
# chsh -s /usr/local/bin/bash

# brew install some tools
# brew install wget --with-iri
# brew install imagemagick --with-webp

# brew install python
# brew install python3
# brew install node@8
# brew install pkg-config
# brew install wget --overwrite
# brew install httpie
# brew install hub
# brew install ack
# brew install doctl
# brew install php@7.0
# brew install php@7.1
# brew install php@7.2
# brew install php@7.4
# brew install imagemagick
# pecl install imagick
# pecl install memcached
# pecl install xdebug'
# pecl install redis
# composer global require "laravel/envoy=~1.0"
# composer global require spatie/phpunit-watcher
# composer global require spatie/mixed-content-scanner-cli
# composer global require laravel/valet
# brew install mysql@5.7
# brew services start mysql@5.7
# brew install yarn
# brew install ghostscript
# brew install mackup
# brew install zsh-autosuggestions

# CASKS
# brew cask install --appdir="/Applications" sublime-text
# brew cask install --appdir="/Applications" atom
# brew cask install --appdir="/Applications" virtualbox
# brew cask install --appdir="/Applications" vagrant
# brew cask install --appdir="/Applications" macdown
# brew cask install --appdir="/Applications" google-chrome
# brew cask install --appdir="/Applications" firefox
# brew cask install --appdir="/Applications" skype
# brew cask install --appdir="/Applications" slack
# brew cask install alacritty


# Install developer friendly quick look plugins; see https://github.com/sindresorhus/quick-look-plugins
brew cask install qlcolorcode qlstephen qlmarkdown quicklook-json qlprettypatch quicklook-csv betterzip qlimagesize webpquicklook suspicious-package quicklookase qlvideo

# Remove outdated versions from the cellar.
brew cleanup


# echo '++++++++++++++++++++++++++++++'
# echo '++++++++++++++++++++++++++++++'
# echo 'All done!'
# echo '++++++++++++++++++++++++++++++'
# echo '++++++++++++++++++++++++++++++'
